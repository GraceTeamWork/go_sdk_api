package test

import (
	"fmt"
	"github.com/gin-gonic/gin"
	"io/ioutil"
	"log"
	"math/rand"
	"net/http"
	"net/url"
	"time"
)

func Callback(c *gin.Context) {

	t1 := time.Now()
	for i := 0; i < 30; i++ {

		wg.Add(1)
		go httpCallback(i)
	}

	wg.Wait()
	t2 := time.Now()
	fmt.Println("ok")
	fmt.Println(t1)
	fmt.Println(t2)
}

func httpCallback(j int) {

	defer wg.Done()

	var param = url.Values{}

	url := "http://127.0.0.1:9003/channel/fengling/callback/5001"

	rand.Seed(time.Now().UnixNano())

	for i := 0; i <= 1000; i++ {
		param.Set("nt_data
		param.Set("sign", "@113@147@107@101@98@153@109@147@151@147@152@105@108@149@102@155@104@152@151@146@104@149@109@152@106@151@111@102@104@107@107@107")
		param.Set("md5Sign", "2481cf37c61c7e310fb9cad55ef78469")
		resp, err := http.PostForm(url, param)
		if err != nil {
			log.Fatal(err)
			return
		}
		defer resp.Body.Close()

		body, err := ioutil.ReadAll(resp.Body)
		if err != nil {
			fmt.Println(err)
		}

		fmt.Println(string(body))
	}
}
